import logging
import os

from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, ConversationHandler

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
CHOOSING, TYPING_REPLY = range(2)

# ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
ADMIN_ID = 705415199  # –í—Å—Ç–∞–≤—å —Å–≤–æ–π Telegram ID (–Ω–∞–ø—Ä–∏–º–µ—Ä, 123456789)

# –¢–µ–∫—Å—Ç—ã –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤
WELCOME_MESSAGE = (
    "–ü—Ä–∏–≤–µ—Ç, –∂–∏—Ç–µ–ª—å –í–µ–ª–∏–∫–∏—Ö –õ—É–∫! üëã –≠—Ç–æ –±–æ—Ç ¬´–í–µ–ª–∏–∫–æ–ª—É–∫—Å–∫–æ–µ –∫–æ–º—å—é–Ω–∏—Ç–∏¬ª. "
    "–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å:"
)
NEWS_MESSAGE = (
    "üì¢ –û—Ç–ª–∏—á–Ω–æ, —Ä–∞—Å—Å–∫–∞–∂–∏ —Å–≤–æ—é –Ω–æ–≤–æ—Å—Ç—å –ø—Ä–æ –í–µ–ª–∏–∫–∏–µ –õ—É–∫–∏! "
    "–ù–∞–ø–∏—à–∏ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏, –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ –∏–ª–∏ —á—Ç–æ —É–≥–æ–¥–Ω–æ, –∏ –º—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏."
)
EVENT_MESSAGE = (
    "üéâ –•–æ—á–µ—à—å –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –∏–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ? "
    "–†–∞—Å—Å–∫–∞–∂–∏, —á—Ç–æ –ø–ª–∞–Ω–∏—Ä—É–µ—à—å: —Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ –∏–ª–∏ —á—Ç–æ-—Ç–æ –µ—â—ë!"
)
CONTACT_MESSAGE = (
    "üìû –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –∏–ª–∏ —Ö–æ—á–µ—à—å —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–æ–º? "
    "–ù–∞–ø–∏—à–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤—å –º–µ–¥–∏–∞ –∏–ª–∏ –ø–µ—Ä–µ—à–ª–∏ —á—Ç–æ-—Ç–æ, –∏ –º—ã –æ—Ç–≤–µ—Ç–∏–º!"
)

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
reply_keyboard = [
    ["üì¢ –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å"],
    ["üéâ –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ"],
    ["üìû –°–≤—è–∑—å —Å –∞–¥–º–∏–Ω–æ–º"]
]
markup = ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ù–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏"""
    await update.message.reply_text(WELCOME_MESSAGE, reply_markup=markup)
    return CHOOSING

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_data = context.user_data
    text = update.message.text
    user_data['choice'] = text

    if text == "üì¢ –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å":
        await update.message.reply_text(NEWS_MESSAGE, reply_markup=ReplyKeyboardRemove())
    elif text == "üéâ –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ":
        await update.message.reply_text(EVENT_MESSAGE, reply_markup=ReplyKeyboardRemove())
    elif text == "üìû –°–≤—è–∑—å —Å –∞–¥–º–∏–Ω–æ–º":
        await update.message.reply_text(CONTACT_MESSAGE, reply_markup=ReplyKeyboardRemove())
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫!", reply_markup=markup)
        return CHOOSING

    return TYPING_REPLY

async def send_to_admin(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É"""
    user_data = context.user_data
    user = update.message.from_user
    choice = user_data.get('choice', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –≤—ã–±–æ—Ä')

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    admin_message1 = (
        "-----------------------------------------------------------------------------------------\n\n"
        f"üì© –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{user.username} (ID: {user.id})\n"
        f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {choice}\n"
    )
    admin_message2 = (
        f"/reply {user.id} "
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∞–¥–º–∏–Ω—É
    await context.bot.send_message(chat_id=ADMIN_ID, text=admin_message1)
    # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
    await context.bot.forward_message(
        chat_id=ADMIN_ID,
        from_chat_id=update.message.chat_id,
        message_id=update.message.message_id
    )
    await context.bot.send_message(chat_id=ADMIN_ID, text=admin_message2)

    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await update.message.reply_text(
        "–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ! üôå –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –µ–≥–æ –∏ —Å–∫–æ—Ä–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º. "
        "–•–æ—á–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â—ë —á—Ç–æ-—Ç–æ? –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup
    )
    return CHOOSING

async def reply(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞"""
    if update.message.from_user.id != ADMIN_ID:
        await update.message.reply_text("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞! üòä")
        return

    try:
        args = context.args
        if len(args) < 2:
            await update.message.reply_text("–ò—Å–ø–æ–ª—å–∑—É–π: /reply <user_id> <—Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞>")
            return

        user_id = int(args[0])
        reply_text = " ".join(args[1:])

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await context.bot.send_message(
            chat_id=user_id,
            text=f"üì¨ –û—Ç–≤–µ—Ç –æ—Ç ¬´–í–õ–ö¬ª: \n{reply_text}"
        )
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
        await update.message.reply_text(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}!")

    except ValueError:
        await update.message.reply_text("–û—à–∏–±–∫–∞: user_id –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º. –ü—Ä–∏–º–µ—Ä: /reply 123456789 –ü—Ä–∏–≤–µ—Ç!")
    except Exception as e:
        await update.message.reply_text(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {str(e)}")

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–û—Ç–º–µ–Ω–∞ –¥–∏–∞–ª–æ–≥–∞"""
    await update.message.reply_text(
        "–ü–æ–∫–∞, –∂–∏—Ç–µ–ª—å –í–µ–ª–∏–∫–∏—Ö –õ—É–∫! –ï—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ /start.",
        reply_markup=ReplyKeyboardRemove()
    )
    return ConversationHandler.END

def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    # –í—Å—Ç–∞–≤—å —Å–≤–æ–π —Ç–æ–∫–µ–Ω –æ—Ç @BotFather
    TOKEN = os.getenv("7307124408:AAGap9FL3Azhgb0qZb_Psr7wQjjxl2-wXLk")
    application = Application.builder().token(TOKEN).build()

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ ConversationHandler
    conv_handler = ConversationHandler(
        entry_points=[
            CommandHandler('start', start),
            MessageHandler(
                filters.Regex('^(üì¢ –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å|üéâ –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ|üìû –°–≤—è–∑—å —Å –∞–¥–º–∏–Ω–æ–º)$'),
                button_handler
            )
        ],
        states={
            CHOOSING: [
                MessageHandler(
                    filters.Regex('^(üì¢ –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å|üéâ –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ|üìû –°–≤—è–∑—å —Å –∞–¥–º–∏–Ω–æ–º)$'),
                    button_handler
                ),
                MessageHandler(
                    filters.ALL & ~filters.Regex('^(üì¢ –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å|üéâ –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ|üìû –°–≤—è–∑—å —Å –∞–¥–º–∏–Ω–æ–º)$') & ~filters.COMMAND,
                    lambda update, context: update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫!üëá", reply_markup=markup) or CHOOSING
                )
            ],
            TYPING_REPLY: [
                MessageHandler(filters.ALL & ~filters.COMMAND, send_to_admin)
            ],
        },
        fallbacks=[CommandHandler('cancel', cancel)]
    )

    application.add_handler(conv_handler)
    application.add_handler(CommandHandler("reply", reply))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ polling
    application.run_webhook(
        listen="0.0.0.0",
        port=int(os.environ.get("PORT", 8443)),
        webhook_url=f"https://{os.environ.get('RENDER_EXTERNAL_HOSTNAME')}/{TOKEN}"
    )


if __name__ == '__main__':
    main()
